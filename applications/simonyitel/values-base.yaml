lasertracker1-sim:
  enabled: true
  image:
    repository: ts-dockerhub.lsst.org/lasertracker
    pullPolicy: Always
  env:
    RUN_ARG: 1 --simulate 2

mtaircompressor1-sim:
  enabled: true
  image:
    repository: ts-dockerhub.lsst.org/mtaircompressor
    pullPolicy: Always
  env:
    RUN_ARG: 1 --simulate --state disabled

mtaircompressor2-sim:
  enabled: true
  image:
    repository: ts-dockerhub.lsst.org/mtaircompressor
    pullPolicy: Always
  env:
    RUN_ARG: 2 --simulate --state disabled

mtaos:
  image:
    repository: ts-dockerhub.lsst.org/mtaos
    pullPolicy: Always
  butlerSecret:
    containerPath: /home/saluser/.lsst
    dbUser: oods
    secretFilename: postgres-credentials.txt
  nfsMountpoint:
  - name: scratch
    containerPath: /scratch
    readOnly: false
    server: nfs-scratch.ls.lsst.org
    serverPath: /scratch

mtcamhexapod-sim:
  enabled: true
  classifier: mthexapod1
  image:
    repository: ts-dockerhub.lsst.org/mthexapod
    pullPolicy: Always
  env:
    RUN_ARG: --simulate 1

mtdome-sim:
  enabled: true
  image:
    repository: ts-dockerhub.lsst.org/mtdome
    pullPolicy: Always
  env:
    RUN_ARG: --simulate 1

mtdometrajectory:
  image:
    repository: ts-dockerhub.lsst.org/mtdometrajectory
    pullPolicy: Always

mtheaderservice:
  enabled: true
  image:
    repository: ts-dockerhub.lsst.org/headerservice
    pullPolicy: Always
  env:
    URL_SPEC: --lfa_mode s3 --s3instance ls
    TSTAND_HEADERSERVICE: BASE
    CAMERA: mt
  envSecrets:
  - name: AWS_ACCESS_KEY_ID
    secretKey: aws-access-key-id
  - name: AWS_SECRET_ACCESS_KEY
    secretKey: aws-secret-access-key
  - name: MYS3_ACCESS_KEY
    secretKey: aws-access-key-id
  - name: MYS3_SECRET_KEY
    secretKey: aws-secret-access-key
  resources:
    limits:
      cpu: 150m
      memory: 600Mi
    requests:
      cpu: 15m
      memory: 240Mi

mtm1m3-sim:
  enabled: true
  image:
    repository: ts-dockerhub.lsst.org/mtm1m3_sim
    pullPolicy: Always
  env:
    LSST_KAFKA_TLM_FLUSH_MS: 0
    LSST_KAFKA_CMDEVT_FLUSH_MS: 0

mtm2-sim:
  enabled: true
  image:
    repository: ts-dockerhub.lsst.org/m2
    pullPolicy: Always
  env:
    RUN_ARG: --simulate

mtm2hexapod-sim:
  enabled: true
  classifier: mthexapod2
  image:
    repository: ts-dockerhub.lsst.org/mthexapod
    pullPolicy: Always
  env:
    RUN_ARG: --simulate 2

mtmount-sim:
  enabled: true
  image:
    repository: ts-dockerhub.lsst.org/mtmount
    pullPolicy: Always
  env:
    RUN_ARG: --simulate

mtoods:
  enabled: true
  image:
    repository: ts-dockerhub.lsst.org/mtoods
    pullPolicy: Always
  env:
    CTRL_OODS_CONFIG_FILE: /etc/mtoods.yaml
    AWS_ACCESS_KEY_ID: oods-lsstcam
    AWS_ENDPOINT_URL: https://s3-butler.ls.lsst.org
  envSecrets:
  - name: AWS_SECRET_ACCESS_KEY
    secretKey: oods-lsstcam-secret-key
  butlerSecret:
    containerPath: /home/saluser/.lsst
    dbUser: oods
    secretFilename: postgres-credentials.txt
  resources:
    limits:
      cpu: 50m
      memory: 700Mi
    requests:
      cpu: 5m
      memory: 345Mi
  configfile:
    path: /etc
    filename: mtoods.yaml
    content: |
      defaultInterval: &interval
          days: 0
          hours: 0
          minutes: 0
          seconds: 0

      ingester:
          kafka:
              brokers:
                  - sasquatch-kafka-brokers.sasquatch:9092
              topics:
                - lsst.s3.raw.lsstcam
              group_id: MTOODS-S3
              max_messages: 250
          butlers:
              - butler:
                  instrument: lsst.obs.lsst.LsstCam
                  class:
                      import : lsst.ctrl.oods.messageAttendant
                      name : MessageAttendant
                  repoDirectory : s3://rubinobs-butler-lsstcam
                  collections:
                      - LSSTCam/raw/all
                  cleanCollections:
                      - collection: LSSTCam/raw/all
                        filesOlderThan:
                            <<: *interval
                            days: 5
                      - collection: LSSTCam/quickLook
                        filesOlderThan:
                            <<: *interval
                            days: 2
                  scanInterval:
                      <<: *interval
                      hours: 1

mtptg:
  image:
    repository: ts-dockerhub.lsst.org/ptkernel
    pullPolicy: Always
  env:
    TELESCOPE: MT
    LSST_KAFKA_TLM_FLUSH_MS: 0
    LSST_KAFKA_CMDEVT_FLUSH_MS: 0

mtrotator-sim:
  enabled: true
  image:
    repository: ts-dockerhub.lsst.org/mtrotator
    pullPolicy: Always
  env:
    RUN_ARG: --simulate
